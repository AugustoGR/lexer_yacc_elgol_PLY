
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMP DIFERENTE DIVIDIDO ELGIO ENQUANTO ENTAO FIM FUNCAO ID IGUAL IGUALATRIBUTO INICIO INTEIRO LPAREN MAIOR MAIS MENOR MENOS NUMERO PONTO RPAREN SE SENAO VEZES VIRGULA ZEROexpression : ID IGUALATRIBUTO expression_math PONTOexpression_math : expression_math MAIS expression_math\n                       | expression_math MENOS expression_math\n                       | expression_math VEZES expression_math\n                       | expression_math DIVIDIDO expression_mathexpression_math : ID\n                       | NUMERO\n                       | function_callfunction_call : FUNCAO LPAREN argument_list RPAREN argument_list : expression_math\n                     | argument_list VIRGULA expression_math\n                     | emptyempty :function_definition : INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO INICIO PONTO statement_list FIM PONTOparameter_list : INTEIRO ID\n                      | parameter_list VIRGULA INTEIRO ID\n                      | emptystatement_list : statement\n                      | statement_list statement\n                      | emptystatement : expression\n                 | variable_declaration\n                 | elgio_assignmentvariable_declaration : INTEIRO ID PONTOelgio_assignment : ELGIO IGUALATRIBUTO elgio_expression PONTOelgio_expression : elgio_expression MAIS elgio_expression\n                        | elgio_expression MENOS elgio_expression\n                        | elgio_expression VEZES elgio_expression\n                        | elgio_expression DIVIDIDO elgio_expression\n                        | ID\n                        | NUMERO\n                        | ZEROconditional_expression : ID MAIOR ID\n                              | ID MENOR ID\n                              | ID IGUAL ID\n                              | ID DIFERENTE ID\n                              | ID MAIOR NUMERO\n                              | ID MENOR NUMERO\n                              | ID IGUAL NUMERO\n                              | ID DIFERENTE NUMERO\n                              | NUMERO MAIOR ID\n                              | NUMERO MENOR ID\n                              | NUMERO IGUAL ID\n                              | NUMERO DIFERENTE IDloop : ENQUANTO conditional_expression INICIO statement_list FIM PONTOif_statement : SE conditional_expression ENTAO statement_list SENAO statement_list FIM PONTO\n                    | SE conditional_expression ENTAO statement_list FIM PONTO'
    
_lr_action_items = {'ID':([0,3,10,11,12,13,14,23,],[2,4,4,4,4,4,4,4,]),'$end':([1,9,],[0,-1,]),'IGUALATRIBUTO':([2,],[3,]),'NUMERO':([3,10,11,12,13,14,23,],[6,6,6,6,6,6,6,]),'FUNCAO':([3,10,11,12,13,14,23,],[8,8,8,8,8,8,8,]),'PONTO':([4,5,6,7,15,16,17,18,22,],[-6,9,-7,-8,-2,-3,-4,-5,-9,]),'MAIS':([4,5,6,7,15,16,17,18,20,22,24,],[-6,10,-7,-8,10,10,10,10,10,-9,10,]),'MENOS':([4,5,6,7,15,16,17,18,20,22,24,],[-6,11,-7,-8,11,11,11,11,11,-9,11,]),'VEZES':([4,5,6,7,15,16,17,18,20,22,24,],[-6,12,-7,-8,12,12,12,12,12,-9,12,]),'DIVIDIDO':([4,5,6,7,15,16,17,18,20,22,24,],[-6,13,-7,-8,13,13,13,13,13,-9,13,]),'RPAREN':([4,6,7,14,15,16,17,18,19,20,21,22,24,],[-6,-7,-8,-13,-2,-3,-4,-5,22,-10,-12,-9,-11,]),'VIRGULA':([4,6,7,14,15,16,17,18,19,20,21,22,24,],[-6,-7,-8,-13,-2,-3,-4,-5,23,-10,-12,-9,-11,]),'LPAREN':([8,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'expression_math':([3,10,11,12,13,14,23,],[5,15,16,17,18,20,24,]),'function_call':([3,10,11,12,13,14,23,],[7,7,7,7,7,7,7,]),'argument_list':([14,],[19,]),'empty':([14,],[21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ID IGUALATRIBUTO expression_math PONTO','expression',4,'p_expression_assignment','yacc.py',6),
  ('expression_math -> expression_math MAIS expression_math','expression_math',3,'p_expression_math_binop','yacc.py',10),
  ('expression_math -> expression_math MENOS expression_math','expression_math',3,'p_expression_math_binop','yacc.py',11),
  ('expression_math -> expression_math VEZES expression_math','expression_math',3,'p_expression_math_binop','yacc.py',12),
  ('expression_math -> expression_math DIVIDIDO expression_math','expression_math',3,'p_expression_math_binop','yacc.py',13),
  ('expression_math -> ID','expression_math',1,'p_expression_math_operand','yacc.py',17),
  ('expression_math -> NUMERO','expression_math',1,'p_expression_math_operand','yacc.py',18),
  ('expression_math -> function_call','expression_math',1,'p_expression_math_operand','yacc.py',19),
  ('function_call -> FUNCAO LPAREN argument_list RPAREN','function_call',4,'p_function_call','yacc.py',25),
  ('argument_list -> expression_math','argument_list',1,'p_argument_list','yacc.py',29),
  ('argument_list -> argument_list VIRGULA expression_math','argument_list',3,'p_argument_list','yacc.py',30),
  ('argument_list -> empty','argument_list',1,'p_argument_list','yacc.py',31),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',42),
  ('function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO INICIO PONTO statement_list FIM PONTO','function_definition',11,'p_function_definition','yacc.py',46),
  ('parameter_list -> INTEIRO ID','parameter_list',2,'p_parameter_list','yacc.py',50),
  ('parameter_list -> parameter_list VIRGULA INTEIRO ID','parameter_list',4,'p_parameter_list','yacc.py',51),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','yacc.py',52),
  ('statement_list -> statement','statement_list',1,'p_statement_list','yacc.py',65),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','yacc.py',66),
  ('statement_list -> empty','statement_list',1,'p_statement_list','yacc.py',67),
  ('statement -> expression','statement',1,'p_statement','yacc.py',78),
  ('statement -> variable_declaration','statement',1,'p_statement','yacc.py',79),
  ('statement -> elgio_assignment','statement',1,'p_statement','yacc.py',80),
  ('variable_declaration -> INTEIRO ID PONTO','variable_declaration',3,'p_variable_declaration','yacc.py',84),
  ('elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO','elgio_assignment',4,'p_elgio_assignment','yacc.py',88),
  ('elgio_expression -> elgio_expression MAIS elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',92),
  ('elgio_expression -> elgio_expression MENOS elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',93),
  ('elgio_expression -> elgio_expression VEZES elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',94),
  ('elgio_expression -> elgio_expression DIVIDIDO elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',95),
  ('elgio_expression -> ID','elgio_expression',1,'p_elgio_expression','yacc.py',96),
  ('elgio_expression -> NUMERO','elgio_expression',1,'p_elgio_expression','yacc.py',97),
  ('elgio_expression -> ZERO','elgio_expression',1,'p_elgio_expression','yacc.py',98),
  ('conditional_expression -> ID MAIOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',107),
  ('conditional_expression -> ID MENOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',108),
  ('conditional_expression -> ID IGUAL ID','conditional_expression',3,'p_conditional_expression','yacc.py',109),
  ('conditional_expression -> ID DIFERENTE ID','conditional_expression',3,'p_conditional_expression','yacc.py',110),
  ('conditional_expression -> ID MAIOR NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',111),
  ('conditional_expression -> ID MENOR NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',112),
  ('conditional_expression -> ID IGUAL NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',113),
  ('conditional_expression -> ID DIFERENTE NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',114),
  ('conditional_expression -> NUMERO MAIOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',115),
  ('conditional_expression -> NUMERO MENOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',116),
  ('conditional_expression -> NUMERO IGUAL ID','conditional_expression',3,'p_conditional_expression','yacc.py',117),
  ('conditional_expression -> NUMERO DIFERENTE ID','conditional_expression',3,'p_conditional_expression','yacc.py',118),
  ('loop -> ENQUANTO conditional_expression INICIO statement_list FIM PONTO','loop',6,'p_loop','yacc.py',122),
  ('if_statement -> SE conditional_expression ENTAO statement_list SENAO statement_list FIM PONTO','if_statement',8,'p_if_statement','yacc.py',126),
  ('if_statement -> SE conditional_expression ENTAO statement_list FIM PONTO','if_statement',6,'p_if_statement','yacc.py',127),
]
