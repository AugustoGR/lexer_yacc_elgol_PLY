Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     expression -> ID IGUALATRIBUTO expression_math PONTO
Rule 2     expression_math -> expression_math MAIS expression_math
Rule 3     expression_math -> expression_math MENOS expression_math
Rule 4     expression_math -> expression_math VEZES expression_math
Rule 5     expression_math -> expression_math DIVIDIDO expression_math
Rule 6     expression_math -> ID
Rule 7     expression_math -> NUMERO
Rule 8     expression_math -> function_call
Rule 9     expression_math -> ZERO
Rule 10    function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block
Rule 11    function_definitions -> function_definition
Rule 12    function_definitions -> function_definitions function_definition
Rule 13    function_call -> FUNCAO LPAREN argument_list RPAREN
Rule 14    argument_list -> expression_math
Rule 15    argument_list -> argument_list VIRGULA expression_math
Rule 16    argument_list -> empty
Rule 17    empty -> <empty>
Rule 18    parameter_list -> INTEIRO ID
Rule 19    parameter_list -> parameter_list VIRGULA INTEIRO ID
Rule 20    parameter_list -> empty
Rule 21    statement_list -> statement
Rule 22    statement_list -> statement_list statement
Rule 23    statement_list -> empty
Rule 24    statement -> expression
Rule 25    statement -> variable_declaration
Rule 26    statement -> loop
Rule 27    statement -> if_statement
Rule 28    statement -> comp
Rule 29    statement -> elgio_assignment
Rule 30    variable_declaration -> INTEIRO ID PONTO
Rule 31    elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO
Rule 32    elgio_expression -> elgio_expression MAIS elgio_expression
Rule 33    elgio_expression -> elgio_expression MENOS elgio_expression
Rule 34    elgio_expression -> elgio_expression VEZES elgio_expression
Rule 35    elgio_expression -> elgio_expression DIVIDIDO elgio_expression
Rule 36    elgio_expression -> ID
Rule 37    elgio_expression -> NUMERO
Rule 38    elgio_expression -> ZERO
Rule 39    conditional_expression -> ID MAIOR ID
Rule 40    conditional_expression -> ID MENOR ID
Rule 41    conditional_expression -> ID IGUAL ID
Rule 42    conditional_expression -> ID DIFERENTE ID
Rule 43    conditional_expression -> ID MAIOR NUMERO
Rule 44    conditional_expression -> ID MENOR NUMERO
Rule 45    conditional_expression -> ID IGUAL NUMERO
Rule 46    conditional_expression -> ID DIFERENTE NUMERO
Rule 47    conditional_expression -> NUMERO MAIOR ID
Rule 48    conditional_expression -> NUMERO MENOR ID
Rule 49    conditional_expression -> NUMERO IGUAL ID
Rule 50    conditional_expression -> NUMERO DIFERENTE ID
Rule 51    conditional_expression -> ID MAIOR ZERO
Rule 52    conditional_expression -> ID MENOR ZERO
Rule 53    conditional_expression -> ID IGUAL ZERO
Rule 54    conditional_expression -> ID DIFERENTE ZERO
Rule 55    conditional_expression -> ZERO MAIOR ID
Rule 56    conditional_expression -> ZERO MENOR ID
Rule 57    conditional_expression -> ZERO IGUAL ID
Rule 58    conditional_expression -> ZERO DIFERENTE ID
Rule 59    conditional_expression -> NUMERO MAIOR ZERO
Rule 60    conditional_expression -> NUMERO MENOR ZERO
Rule 61    conditional_expression -> NUMERO IGUAL ZERO
Rule 62    conditional_expression -> NUMERO DIFERENTE ZERO
Rule 63    conditional_expression -> ZERO MAIOR NUMERO
Rule 64    conditional_expression -> ZERO MENOR NUMERO
Rule 65    conditional_expression -> ZERO IGUAL NUMERO
Rule 66    conditional_expression -> ZERO DIFERENTE NUMERO
Rule 67    conditional_expression -> ZERO MAIOR ZERO
Rule 68    loop -> ENQUANTO conditional_expression block
Rule 69    if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block
Rule 70    if_statement -> SE conditional_expression PONTO ENTAO PONTO block
Rule 71    comp -> COMP expression_math PONTO
Rule 72    program -> block
Rule 73    program -> function_definitions block
Rule 74    block -> INICIO PONTO statement_list FIM PONTO

Terminals, with rules where they appear

COMP                 : 71
DIFERENTE            : 42 46 50 54 58 62 66
DIVIDIDO             : 5 35
ELGIO                : 31
ENQUANTO             : 68
ENTAO                : 69 70
FIM                  : 74
FUNCAO               : 10 13
ID                   : 1 6 18 19 30 36 39 39 40 40 41 41 42 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
IGUAL                : 41 45 49 53 57 61 65
IGUALATRIBUTO        : 1 31
INICIO               : 74
INTEIRO              : 10 18 19 30
LPAREN               : 10 13
MAIOR                : 39 43 47 51 55 59 63 67
MAIS                 : 2 32
MENOR                : 40 44 48 52 56 60 64
MENOS                : 3 33
NUMERO               : 7 37 43 44 45 46 47 48 49 50 59 60 61 62 63 64 65 66
PONTO                : 1 10 30 31 69 69 70 70 71 74 74
RPAREN               : 10 13
SE                   : 69 70
SENAO                : 69
VEZES                : 4 34
VIRGULA              : 15 19
ZERO                 : 9 38 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 67
error                : 

Nonterminals, with rules where they appear

argument_list        : 13 15
block                : 10 68 69 69 70 72 73
comp                 : 28
conditional_expression : 68 69 70
elgio_assignment     : 29
elgio_expression     : 31 32 32 33 33 34 34 35 35
empty                : 16 20 23
expression           : 24
expression_math      : 1 2 2 3 3 4 4 5 5 14 15 71
function_call        : 8
function_definition  : 11 12
function_definitions : 12 73
if_statement         : 27
loop                 : 26
parameter_list       : 10 19
program              : 0
statement            : 21 22
statement_list       : 22 74
variable_declaration : 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (72) program -> . block
    (73) program -> . function_definitions block
    (74) block -> . INICIO PONTO statement_list FIM PONTO
    (11) function_definitions -> . function_definition
    (12) function_definitions -> . function_definitions function_definition
    (10) function_definition -> . INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block

    INICIO          shift and go to state 4
    INTEIRO         shift and go to state 6

    program                        shift and go to state 1
    block                          shift and go to state 2
    function_definitions           shift and go to state 3
    function_definition            shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (72) program -> block .

    $end            reduce using rule 72 (program -> block .)


state 3

    (73) program -> function_definitions . block
    (12) function_definitions -> function_definitions . function_definition
    (74) block -> . INICIO PONTO statement_list FIM PONTO
    (10) function_definition -> . INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block

    INICIO          shift and go to state 4
    INTEIRO         shift and go to state 6

    block                          shift and go to state 7
    function_definition            shift and go to state 8

state 4

    (74) block -> INICIO . PONTO statement_list FIM PONTO

    PONTO           shift and go to state 9


state 5

    (11) function_definitions -> function_definition .

    INICIO          reduce using rule 11 (function_definitions -> function_definition .)
    INTEIRO         reduce using rule 11 (function_definitions -> function_definition .)


state 6

    (10) function_definition -> INTEIRO . FUNCAO LPAREN parameter_list RPAREN PONTO block

    FUNCAO          shift and go to state 10


state 7

    (73) program -> function_definitions block .

    $end            reduce using rule 73 (program -> function_definitions block .)


state 8

    (12) function_definitions -> function_definitions function_definition .

    INICIO          reduce using rule 12 (function_definitions -> function_definitions function_definition .)
    INTEIRO         reduce using rule 12 (function_definitions -> function_definitions function_definition .)


state 9

    (74) block -> INICIO PONTO . statement_list FIM PONTO
    (21) statement_list -> . statement
    (22) statement_list -> . statement_list statement
    (23) statement_list -> . empty
    (24) statement -> . expression
    (25) statement -> . variable_declaration
    (26) statement -> . loop
    (27) statement -> . if_statement
    (28) statement -> . comp
    (29) statement -> . elgio_assignment
    (17) empty -> .
    (1) expression -> . ID IGUALATRIBUTO expression_math PONTO
    (30) variable_declaration -> . INTEIRO ID PONTO
    (68) loop -> . ENQUANTO conditional_expression block
    (69) if_statement -> . SE conditional_expression PONTO ENTAO PONTO block SENAO block
    (70) if_statement -> . SE conditional_expression PONTO ENTAO PONTO block
    (71) comp -> . COMP expression_math PONTO
    (31) elgio_assignment -> . ELGIO IGUALATRIBUTO elgio_expression PONTO

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INTEIRO resolved as shift
  ! shift/reduce conflict for ENQUANTO resolved as shift
  ! shift/reduce conflict for SE resolved as shift
  ! shift/reduce conflict for COMP resolved as shift
  ! shift/reduce conflict for ELGIO resolved as shift
    FIM             reduce using rule 17 (empty -> .)
    ID              shift and go to state 20
    INTEIRO         shift and go to state 21
    ENQUANTO        shift and go to state 22
    SE              shift and go to state 23
    COMP            shift and go to state 24
    ELGIO           shift and go to state 25

  ! ID              [ reduce using rule 17 (empty -> .) ]
  ! INTEIRO         [ reduce using rule 17 (empty -> .) ]
  ! ENQUANTO        [ reduce using rule 17 (empty -> .) ]
  ! SE              [ reduce using rule 17 (empty -> .) ]
  ! COMP            [ reduce using rule 17 (empty -> .) ]
  ! ELGIO           [ reduce using rule 17 (empty -> .) ]

    statement_list                 shift and go to state 11
    statement                      shift and go to state 12
    empty                          shift and go to state 13
    expression                     shift and go to state 14
    variable_declaration           shift and go to state 15
    loop                           shift and go to state 16
    if_statement                   shift and go to state 17
    comp                           shift and go to state 18
    elgio_assignment               shift and go to state 19

state 10

    (10) function_definition -> INTEIRO FUNCAO . LPAREN parameter_list RPAREN PONTO block

    LPAREN          shift and go to state 26


state 11

    (74) block -> INICIO PONTO statement_list . FIM PONTO
    (22) statement_list -> statement_list . statement
    (24) statement -> . expression
    (25) statement -> . variable_declaration
    (26) statement -> . loop
    (27) statement -> . if_statement
    (28) statement -> . comp
    (29) statement -> . elgio_assignment
    (1) expression -> . ID IGUALATRIBUTO expression_math PONTO
    (30) variable_declaration -> . INTEIRO ID PONTO
    (68) loop -> . ENQUANTO conditional_expression block
    (69) if_statement -> . SE conditional_expression PONTO ENTAO PONTO block SENAO block
    (70) if_statement -> . SE conditional_expression PONTO ENTAO PONTO block
    (71) comp -> . COMP expression_math PONTO
    (31) elgio_assignment -> . ELGIO IGUALATRIBUTO elgio_expression PONTO

    FIM             shift and go to state 27
    ID              shift and go to state 20
    INTEIRO         shift and go to state 21
    ENQUANTO        shift and go to state 22
    SE              shift and go to state 23
    COMP            shift and go to state 24
    ELGIO           shift and go to state 25

    statement                      shift and go to state 28
    expression                     shift and go to state 14
    variable_declaration           shift and go to state 15
    loop                           shift and go to state 16
    if_statement                   shift and go to state 17
    comp                           shift and go to state 18
    elgio_assignment               shift and go to state 19

state 12

    (21) statement_list -> statement .

    FIM             reduce using rule 21 (statement_list -> statement .)
    ID              reduce using rule 21 (statement_list -> statement .)
    INTEIRO         reduce using rule 21 (statement_list -> statement .)
    ENQUANTO        reduce using rule 21 (statement_list -> statement .)
    SE              reduce using rule 21 (statement_list -> statement .)
    COMP            reduce using rule 21 (statement_list -> statement .)
    ELGIO           reduce using rule 21 (statement_list -> statement .)


state 13

    (23) statement_list -> empty .

    FIM             reduce using rule 23 (statement_list -> empty .)
    ID              reduce using rule 23 (statement_list -> empty .)
    INTEIRO         reduce using rule 23 (statement_list -> empty .)
    ENQUANTO        reduce using rule 23 (statement_list -> empty .)
    SE              reduce using rule 23 (statement_list -> empty .)
    COMP            reduce using rule 23 (statement_list -> empty .)
    ELGIO           reduce using rule 23 (statement_list -> empty .)


state 14

    (24) statement -> expression .

    FIM             reduce using rule 24 (statement -> expression .)
    ID              reduce using rule 24 (statement -> expression .)
    INTEIRO         reduce using rule 24 (statement -> expression .)
    ENQUANTO        reduce using rule 24 (statement -> expression .)
    SE              reduce using rule 24 (statement -> expression .)
    COMP            reduce using rule 24 (statement -> expression .)
    ELGIO           reduce using rule 24 (statement -> expression .)


state 15

    (25) statement -> variable_declaration .

    FIM             reduce using rule 25 (statement -> variable_declaration .)
    ID              reduce using rule 25 (statement -> variable_declaration .)
    INTEIRO         reduce using rule 25 (statement -> variable_declaration .)
    ENQUANTO        reduce using rule 25 (statement -> variable_declaration .)
    SE              reduce using rule 25 (statement -> variable_declaration .)
    COMP            reduce using rule 25 (statement -> variable_declaration .)
    ELGIO           reduce using rule 25 (statement -> variable_declaration .)


state 16

    (26) statement -> loop .

    FIM             reduce using rule 26 (statement -> loop .)
    ID              reduce using rule 26 (statement -> loop .)
    INTEIRO         reduce using rule 26 (statement -> loop .)
    ENQUANTO        reduce using rule 26 (statement -> loop .)
    SE              reduce using rule 26 (statement -> loop .)
    COMP            reduce using rule 26 (statement -> loop .)
    ELGIO           reduce using rule 26 (statement -> loop .)


state 17

    (27) statement -> if_statement .

    FIM             reduce using rule 27 (statement -> if_statement .)
    ID              reduce using rule 27 (statement -> if_statement .)
    INTEIRO         reduce using rule 27 (statement -> if_statement .)
    ENQUANTO        reduce using rule 27 (statement -> if_statement .)
    SE              reduce using rule 27 (statement -> if_statement .)
    COMP            reduce using rule 27 (statement -> if_statement .)
    ELGIO           reduce using rule 27 (statement -> if_statement .)


state 18

    (28) statement -> comp .

    FIM             reduce using rule 28 (statement -> comp .)
    ID              reduce using rule 28 (statement -> comp .)
    INTEIRO         reduce using rule 28 (statement -> comp .)
    ENQUANTO        reduce using rule 28 (statement -> comp .)
    SE              reduce using rule 28 (statement -> comp .)
    COMP            reduce using rule 28 (statement -> comp .)
    ELGIO           reduce using rule 28 (statement -> comp .)


state 19

    (29) statement -> elgio_assignment .

    FIM             reduce using rule 29 (statement -> elgio_assignment .)
    ID              reduce using rule 29 (statement -> elgio_assignment .)
    INTEIRO         reduce using rule 29 (statement -> elgio_assignment .)
    ENQUANTO        reduce using rule 29 (statement -> elgio_assignment .)
    SE              reduce using rule 29 (statement -> elgio_assignment .)
    COMP            reduce using rule 29 (statement -> elgio_assignment .)
    ELGIO           reduce using rule 29 (statement -> elgio_assignment .)


state 20

    (1) expression -> ID . IGUALATRIBUTO expression_math PONTO

    IGUALATRIBUTO   shift and go to state 29


state 21

    (30) variable_declaration -> INTEIRO . ID PONTO

    ID              shift and go to state 30


state 22

    (68) loop -> ENQUANTO . conditional_expression block
    (39) conditional_expression -> . ID MAIOR ID
    (40) conditional_expression -> . ID MENOR ID
    (41) conditional_expression -> . ID IGUAL ID
    (42) conditional_expression -> . ID DIFERENTE ID
    (43) conditional_expression -> . ID MAIOR NUMERO
    (44) conditional_expression -> . ID MENOR NUMERO
    (45) conditional_expression -> . ID IGUAL NUMERO
    (46) conditional_expression -> . ID DIFERENTE NUMERO
    (47) conditional_expression -> . NUMERO MAIOR ID
    (48) conditional_expression -> . NUMERO MENOR ID
    (49) conditional_expression -> . NUMERO IGUAL ID
    (50) conditional_expression -> . NUMERO DIFERENTE ID
    (51) conditional_expression -> . ID MAIOR ZERO
    (52) conditional_expression -> . ID MENOR ZERO
    (53) conditional_expression -> . ID IGUAL ZERO
    (54) conditional_expression -> . ID DIFERENTE ZERO
    (55) conditional_expression -> . ZERO MAIOR ID
    (56) conditional_expression -> . ZERO MENOR ID
    (57) conditional_expression -> . ZERO IGUAL ID
    (58) conditional_expression -> . ZERO DIFERENTE ID
    (59) conditional_expression -> . NUMERO MAIOR ZERO
    (60) conditional_expression -> . NUMERO MENOR ZERO
    (61) conditional_expression -> . NUMERO IGUAL ZERO
    (62) conditional_expression -> . NUMERO DIFERENTE ZERO
    (63) conditional_expression -> . ZERO MAIOR NUMERO
    (64) conditional_expression -> . ZERO MENOR NUMERO
    (65) conditional_expression -> . ZERO IGUAL NUMERO
    (66) conditional_expression -> . ZERO DIFERENTE NUMERO
    (67) conditional_expression -> . ZERO MAIOR ZERO

    ID              shift and go to state 32
    NUMERO          shift and go to state 33
    ZERO            shift and go to state 34

    conditional_expression         shift and go to state 31

state 23

    (69) if_statement -> SE . conditional_expression PONTO ENTAO PONTO block SENAO block
    (70) if_statement -> SE . conditional_expression PONTO ENTAO PONTO block
    (39) conditional_expression -> . ID MAIOR ID
    (40) conditional_expression -> . ID MENOR ID
    (41) conditional_expression -> . ID IGUAL ID
    (42) conditional_expression -> . ID DIFERENTE ID
    (43) conditional_expression -> . ID MAIOR NUMERO
    (44) conditional_expression -> . ID MENOR NUMERO
    (45) conditional_expression -> . ID IGUAL NUMERO
    (46) conditional_expression -> . ID DIFERENTE NUMERO
    (47) conditional_expression -> . NUMERO MAIOR ID
    (48) conditional_expression -> . NUMERO MENOR ID
    (49) conditional_expression -> . NUMERO IGUAL ID
    (50) conditional_expression -> . NUMERO DIFERENTE ID
    (51) conditional_expression -> . ID MAIOR ZERO
    (52) conditional_expression -> . ID MENOR ZERO
    (53) conditional_expression -> . ID IGUAL ZERO
    (54) conditional_expression -> . ID DIFERENTE ZERO
    (55) conditional_expression -> . ZERO MAIOR ID
    (56) conditional_expression -> . ZERO MENOR ID
    (57) conditional_expression -> . ZERO IGUAL ID
    (58) conditional_expression -> . ZERO DIFERENTE ID
    (59) conditional_expression -> . NUMERO MAIOR ZERO
    (60) conditional_expression -> . NUMERO MENOR ZERO
    (61) conditional_expression -> . NUMERO IGUAL ZERO
    (62) conditional_expression -> . NUMERO DIFERENTE ZERO
    (63) conditional_expression -> . ZERO MAIOR NUMERO
    (64) conditional_expression -> . ZERO MENOR NUMERO
    (65) conditional_expression -> . ZERO IGUAL NUMERO
    (66) conditional_expression -> . ZERO DIFERENTE NUMERO
    (67) conditional_expression -> . ZERO MAIOR ZERO

    ID              shift and go to state 32
    NUMERO          shift and go to state 33
    ZERO            shift and go to state 34

    conditional_expression         shift and go to state 35

state 24

    (71) comp -> COMP . expression_math PONTO
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 36
    function_call                  shift and go to state 39

state 25

    (31) elgio_assignment -> ELGIO . IGUALATRIBUTO elgio_expression PONTO

    IGUALATRIBUTO   shift and go to state 42


state 26

    (10) function_definition -> INTEIRO FUNCAO LPAREN . parameter_list RPAREN PONTO block
    (18) parameter_list -> . INTEIRO ID
    (19) parameter_list -> . parameter_list VIRGULA INTEIRO ID
    (20) parameter_list -> . empty
    (17) empty -> .

    INTEIRO         shift and go to state 43
    RPAREN          reduce using rule 17 (empty -> .)
    VIRGULA         reduce using rule 17 (empty -> .)

    parameter_list                 shift and go to state 44
    empty                          shift and go to state 45

state 27

    (74) block -> INICIO PONTO statement_list FIM . PONTO

    PONTO           shift and go to state 46


state 28

    (22) statement_list -> statement_list statement .

    FIM             reduce using rule 22 (statement_list -> statement_list statement .)
    ID              reduce using rule 22 (statement_list -> statement_list statement .)
    INTEIRO         reduce using rule 22 (statement_list -> statement_list statement .)
    ENQUANTO        reduce using rule 22 (statement_list -> statement_list statement .)
    SE              reduce using rule 22 (statement_list -> statement_list statement .)
    COMP            reduce using rule 22 (statement_list -> statement_list statement .)
    ELGIO           reduce using rule 22 (statement_list -> statement_list statement .)


state 29

    (1) expression -> ID IGUALATRIBUTO . expression_math PONTO
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 47
    function_call                  shift and go to state 39

state 30

    (30) variable_declaration -> INTEIRO ID . PONTO

    PONTO           shift and go to state 48


state 31

    (68) loop -> ENQUANTO conditional_expression . block
    (74) block -> . INICIO PONTO statement_list FIM PONTO

    INICIO          shift and go to state 4

    block                          shift and go to state 49

state 32

    (39) conditional_expression -> ID . MAIOR ID
    (40) conditional_expression -> ID . MENOR ID
    (41) conditional_expression -> ID . IGUAL ID
    (42) conditional_expression -> ID . DIFERENTE ID
    (43) conditional_expression -> ID . MAIOR NUMERO
    (44) conditional_expression -> ID . MENOR NUMERO
    (45) conditional_expression -> ID . IGUAL NUMERO
    (46) conditional_expression -> ID . DIFERENTE NUMERO
    (51) conditional_expression -> ID . MAIOR ZERO
    (52) conditional_expression -> ID . MENOR ZERO
    (53) conditional_expression -> ID . IGUAL ZERO
    (54) conditional_expression -> ID . DIFERENTE ZERO

    MAIOR           shift and go to state 50
    MENOR           shift and go to state 51
    IGUAL           shift and go to state 52
    DIFERENTE       shift and go to state 53


state 33

    (47) conditional_expression -> NUMERO . MAIOR ID
    (48) conditional_expression -> NUMERO . MENOR ID
    (49) conditional_expression -> NUMERO . IGUAL ID
    (50) conditional_expression -> NUMERO . DIFERENTE ID
    (59) conditional_expression -> NUMERO . MAIOR ZERO
    (60) conditional_expression -> NUMERO . MENOR ZERO
    (61) conditional_expression -> NUMERO . IGUAL ZERO
    (62) conditional_expression -> NUMERO . DIFERENTE ZERO

    MAIOR           shift and go to state 54
    MENOR           shift and go to state 55
    IGUAL           shift and go to state 56
    DIFERENTE       shift and go to state 57


state 34

    (55) conditional_expression -> ZERO . MAIOR ID
    (56) conditional_expression -> ZERO . MENOR ID
    (57) conditional_expression -> ZERO . IGUAL ID
    (58) conditional_expression -> ZERO . DIFERENTE ID
    (63) conditional_expression -> ZERO . MAIOR NUMERO
    (64) conditional_expression -> ZERO . MENOR NUMERO
    (65) conditional_expression -> ZERO . IGUAL NUMERO
    (66) conditional_expression -> ZERO . DIFERENTE NUMERO
    (67) conditional_expression -> ZERO . MAIOR ZERO

    MAIOR           shift and go to state 58
    MENOR           shift and go to state 59
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61


state 35

    (69) if_statement -> SE conditional_expression . PONTO ENTAO PONTO block SENAO block
    (70) if_statement -> SE conditional_expression . PONTO ENTAO PONTO block

    PONTO           shift and go to state 62


state 36

    (71) comp -> COMP expression_math . PONTO
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

    PONTO           shift and go to state 63
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67


state 37

    (6) expression_math -> ID .

    PONTO           reduce using rule 6 (expression_math -> ID .)
    MAIS            reduce using rule 6 (expression_math -> ID .)
    MENOS           reduce using rule 6 (expression_math -> ID .)
    VEZES           reduce using rule 6 (expression_math -> ID .)
    DIVIDIDO        reduce using rule 6 (expression_math -> ID .)
    RPAREN          reduce using rule 6 (expression_math -> ID .)
    VIRGULA         reduce using rule 6 (expression_math -> ID .)


state 38

    (7) expression_math -> NUMERO .

    PONTO           reduce using rule 7 (expression_math -> NUMERO .)
    MAIS            reduce using rule 7 (expression_math -> NUMERO .)
    MENOS           reduce using rule 7 (expression_math -> NUMERO .)
    VEZES           reduce using rule 7 (expression_math -> NUMERO .)
    DIVIDIDO        reduce using rule 7 (expression_math -> NUMERO .)
    RPAREN          reduce using rule 7 (expression_math -> NUMERO .)
    VIRGULA         reduce using rule 7 (expression_math -> NUMERO .)


state 39

    (8) expression_math -> function_call .

    PONTO           reduce using rule 8 (expression_math -> function_call .)
    MAIS            reduce using rule 8 (expression_math -> function_call .)
    MENOS           reduce using rule 8 (expression_math -> function_call .)
    VEZES           reduce using rule 8 (expression_math -> function_call .)
    DIVIDIDO        reduce using rule 8 (expression_math -> function_call .)
    RPAREN          reduce using rule 8 (expression_math -> function_call .)
    VIRGULA         reduce using rule 8 (expression_math -> function_call .)


state 40

    (9) expression_math -> ZERO .

    PONTO           reduce using rule 9 (expression_math -> ZERO .)
    MAIS            reduce using rule 9 (expression_math -> ZERO .)
    MENOS           reduce using rule 9 (expression_math -> ZERO .)
    VEZES           reduce using rule 9 (expression_math -> ZERO .)
    DIVIDIDO        reduce using rule 9 (expression_math -> ZERO .)
    RPAREN          reduce using rule 9 (expression_math -> ZERO .)
    VIRGULA         reduce using rule 9 (expression_math -> ZERO .)


state 41

    (13) function_call -> FUNCAO . LPAREN argument_list RPAREN

    LPAREN          shift and go to state 68


state 42

    (31) elgio_assignment -> ELGIO IGUALATRIBUTO . elgio_expression PONTO
    (32) elgio_expression -> . elgio_expression MAIS elgio_expression
    (33) elgio_expression -> . elgio_expression MENOS elgio_expression
    (34) elgio_expression -> . elgio_expression VEZES elgio_expression
    (35) elgio_expression -> . elgio_expression DIVIDIDO elgio_expression
    (36) elgio_expression -> . ID
    (37) elgio_expression -> . NUMERO
    (38) elgio_expression -> . ZERO

    ID              shift and go to state 70
    NUMERO          shift and go to state 71
    ZERO            shift and go to state 72

    elgio_expression               shift and go to state 69

state 43

    (18) parameter_list -> INTEIRO . ID

    ID              shift and go to state 73


state 44

    (10) function_definition -> INTEIRO FUNCAO LPAREN parameter_list . RPAREN PONTO block
    (19) parameter_list -> parameter_list . VIRGULA INTEIRO ID

    RPAREN          shift and go to state 74
    VIRGULA         shift and go to state 75


state 45

    (20) parameter_list -> empty .

    RPAREN          reduce using rule 20 (parameter_list -> empty .)
    VIRGULA         reduce using rule 20 (parameter_list -> empty .)


state 46

    (74) block -> INICIO PONTO statement_list FIM PONTO .

    $end            reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    FIM             reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    ID              reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    INTEIRO         reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    ENQUANTO        reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    SE              reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    COMP            reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    ELGIO           reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    INICIO          reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)
    SENAO           reduce using rule 74 (block -> INICIO PONTO statement_list FIM PONTO .)


state 47

    (1) expression -> ID IGUALATRIBUTO expression_math . PONTO
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

    PONTO           shift and go to state 76
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67


state 48

    (30) variable_declaration -> INTEIRO ID PONTO .

    FIM             reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)
    ID              reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)
    INTEIRO         reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)
    ENQUANTO        reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)
    SE              reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)
    COMP            reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)
    ELGIO           reduce using rule 30 (variable_declaration -> INTEIRO ID PONTO .)


state 49

    (68) loop -> ENQUANTO conditional_expression block .

    FIM             reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)
    ID              reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)
    INTEIRO         reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)
    ENQUANTO        reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)
    SE              reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)
    COMP            reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)
    ELGIO           reduce using rule 68 (loop -> ENQUANTO conditional_expression block .)


state 50

    (39) conditional_expression -> ID MAIOR . ID
    (43) conditional_expression -> ID MAIOR . NUMERO
    (51) conditional_expression -> ID MAIOR . ZERO

    ID              shift and go to state 77
    NUMERO          shift and go to state 78
    ZERO            shift and go to state 79


state 51

    (40) conditional_expression -> ID MENOR . ID
    (44) conditional_expression -> ID MENOR . NUMERO
    (52) conditional_expression -> ID MENOR . ZERO

    ID              shift and go to state 80
    NUMERO          shift and go to state 81
    ZERO            shift and go to state 82


state 52

    (41) conditional_expression -> ID IGUAL . ID
    (45) conditional_expression -> ID IGUAL . NUMERO
    (53) conditional_expression -> ID IGUAL . ZERO

    ID              shift and go to state 83
    NUMERO          shift and go to state 84
    ZERO            shift and go to state 85


state 53

    (42) conditional_expression -> ID DIFERENTE . ID
    (46) conditional_expression -> ID DIFERENTE . NUMERO
    (54) conditional_expression -> ID DIFERENTE . ZERO

    ID              shift and go to state 86
    NUMERO          shift and go to state 87
    ZERO            shift and go to state 88


state 54

    (47) conditional_expression -> NUMERO MAIOR . ID
    (59) conditional_expression -> NUMERO MAIOR . ZERO

    ID              shift and go to state 89
    ZERO            shift and go to state 90


state 55

    (48) conditional_expression -> NUMERO MENOR . ID
    (60) conditional_expression -> NUMERO MENOR . ZERO

    ID              shift and go to state 91
    ZERO            shift and go to state 92


state 56

    (49) conditional_expression -> NUMERO IGUAL . ID
    (61) conditional_expression -> NUMERO IGUAL . ZERO

    ID              shift and go to state 93
    ZERO            shift and go to state 94


state 57

    (50) conditional_expression -> NUMERO DIFERENTE . ID
    (62) conditional_expression -> NUMERO DIFERENTE . ZERO

    ID              shift and go to state 95
    ZERO            shift and go to state 96


state 58

    (55) conditional_expression -> ZERO MAIOR . ID
    (63) conditional_expression -> ZERO MAIOR . NUMERO
    (67) conditional_expression -> ZERO MAIOR . ZERO

    ID              shift and go to state 98
    NUMERO          shift and go to state 99
    ZERO            shift and go to state 97


state 59

    (56) conditional_expression -> ZERO MENOR . ID
    (64) conditional_expression -> ZERO MENOR . NUMERO

    ID              shift and go to state 100
    NUMERO          shift and go to state 101


state 60

    (57) conditional_expression -> ZERO IGUAL . ID
    (65) conditional_expression -> ZERO IGUAL . NUMERO

    ID              shift and go to state 102
    NUMERO          shift and go to state 103


state 61

    (58) conditional_expression -> ZERO DIFERENTE . ID
    (66) conditional_expression -> ZERO DIFERENTE . NUMERO

    ID              shift and go to state 104
    NUMERO          shift and go to state 105


state 62

    (69) if_statement -> SE conditional_expression PONTO . ENTAO PONTO block SENAO block
    (70) if_statement -> SE conditional_expression PONTO . ENTAO PONTO block

    ENTAO           shift and go to state 106


state 63

    (71) comp -> COMP expression_math PONTO .

    FIM             reduce using rule 71 (comp -> COMP expression_math PONTO .)
    ID              reduce using rule 71 (comp -> COMP expression_math PONTO .)
    INTEIRO         reduce using rule 71 (comp -> COMP expression_math PONTO .)
    ENQUANTO        reduce using rule 71 (comp -> COMP expression_math PONTO .)
    SE              reduce using rule 71 (comp -> COMP expression_math PONTO .)
    COMP            reduce using rule 71 (comp -> COMP expression_math PONTO .)
    ELGIO           reduce using rule 71 (comp -> COMP expression_math PONTO .)


state 64

    (2) expression_math -> expression_math MAIS . expression_math
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 107
    function_call                  shift and go to state 39

state 65

    (3) expression_math -> expression_math MENOS . expression_math
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 108
    function_call                  shift and go to state 39

state 66

    (4) expression_math -> expression_math VEZES . expression_math
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 109
    function_call                  shift and go to state 39

state 67

    (5) expression_math -> expression_math DIVIDIDO . expression_math
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 110
    function_call                  shift and go to state 39

state 68

    (13) function_call -> FUNCAO LPAREN . argument_list RPAREN
    (14) argument_list -> . expression_math
    (15) argument_list -> . argument_list VIRGULA expression_math
    (16) argument_list -> . empty
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (17) empty -> .
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    RPAREN          reduce using rule 17 (empty -> .)
    VIRGULA         reduce using rule 17 (empty -> .)
    FUNCAO          shift and go to state 41

    argument_list                  shift and go to state 111
    expression_math                shift and go to state 112
    empty                          shift and go to state 113
    function_call                  shift and go to state 39

state 69

    (31) elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression . PONTO
    (32) elgio_expression -> elgio_expression . MAIS elgio_expression
    (33) elgio_expression -> elgio_expression . MENOS elgio_expression
    (34) elgio_expression -> elgio_expression . VEZES elgio_expression
    (35) elgio_expression -> elgio_expression . DIVIDIDO elgio_expression

    PONTO           shift and go to state 114
    MAIS            shift and go to state 115
    MENOS           shift and go to state 116
    VEZES           shift and go to state 117
    DIVIDIDO        shift and go to state 118


state 70

    (36) elgio_expression -> ID .

    PONTO           reduce using rule 36 (elgio_expression -> ID .)
    MAIS            reduce using rule 36 (elgio_expression -> ID .)
    MENOS           reduce using rule 36 (elgio_expression -> ID .)
    VEZES           reduce using rule 36 (elgio_expression -> ID .)
    DIVIDIDO        reduce using rule 36 (elgio_expression -> ID .)


state 71

    (37) elgio_expression -> NUMERO .

    PONTO           reduce using rule 37 (elgio_expression -> NUMERO .)
    MAIS            reduce using rule 37 (elgio_expression -> NUMERO .)
    MENOS           reduce using rule 37 (elgio_expression -> NUMERO .)
    VEZES           reduce using rule 37 (elgio_expression -> NUMERO .)
    DIVIDIDO        reduce using rule 37 (elgio_expression -> NUMERO .)


state 72

    (38) elgio_expression -> ZERO .

    PONTO           reduce using rule 38 (elgio_expression -> ZERO .)
    MAIS            reduce using rule 38 (elgio_expression -> ZERO .)
    MENOS           reduce using rule 38 (elgio_expression -> ZERO .)
    VEZES           reduce using rule 38 (elgio_expression -> ZERO .)
    DIVIDIDO        reduce using rule 38 (elgio_expression -> ZERO .)


state 73

    (18) parameter_list -> INTEIRO ID .

    RPAREN          reduce using rule 18 (parameter_list -> INTEIRO ID .)
    VIRGULA         reduce using rule 18 (parameter_list -> INTEIRO ID .)


state 74

    (10) function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN . PONTO block

    PONTO           shift and go to state 119


state 75

    (19) parameter_list -> parameter_list VIRGULA . INTEIRO ID

    INTEIRO         shift and go to state 120


state 76

    (1) expression -> ID IGUALATRIBUTO expression_math PONTO .

    FIM             reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)
    ID              reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)
    INTEIRO         reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)
    ENQUANTO        reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)
    SE              reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)
    COMP            reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)
    ELGIO           reduce using rule 1 (expression -> ID IGUALATRIBUTO expression_math PONTO .)


state 77

    (39) conditional_expression -> ID MAIOR ID .

    INICIO          reduce using rule 39 (conditional_expression -> ID MAIOR ID .)
    PONTO           reduce using rule 39 (conditional_expression -> ID MAIOR ID .)


state 78

    (43) conditional_expression -> ID MAIOR NUMERO .

    INICIO          reduce using rule 43 (conditional_expression -> ID MAIOR NUMERO .)
    PONTO           reduce using rule 43 (conditional_expression -> ID MAIOR NUMERO .)


state 79

    (51) conditional_expression -> ID MAIOR ZERO .

    INICIO          reduce using rule 51 (conditional_expression -> ID MAIOR ZERO .)
    PONTO           reduce using rule 51 (conditional_expression -> ID MAIOR ZERO .)


state 80

    (40) conditional_expression -> ID MENOR ID .

    INICIO          reduce using rule 40 (conditional_expression -> ID MENOR ID .)
    PONTO           reduce using rule 40 (conditional_expression -> ID MENOR ID .)


state 81

    (44) conditional_expression -> ID MENOR NUMERO .

    INICIO          reduce using rule 44 (conditional_expression -> ID MENOR NUMERO .)
    PONTO           reduce using rule 44 (conditional_expression -> ID MENOR NUMERO .)


state 82

    (52) conditional_expression -> ID MENOR ZERO .

    INICIO          reduce using rule 52 (conditional_expression -> ID MENOR ZERO .)
    PONTO           reduce using rule 52 (conditional_expression -> ID MENOR ZERO .)


state 83

    (41) conditional_expression -> ID IGUAL ID .

    INICIO          reduce using rule 41 (conditional_expression -> ID IGUAL ID .)
    PONTO           reduce using rule 41 (conditional_expression -> ID IGUAL ID .)


state 84

    (45) conditional_expression -> ID IGUAL NUMERO .

    INICIO          reduce using rule 45 (conditional_expression -> ID IGUAL NUMERO .)
    PONTO           reduce using rule 45 (conditional_expression -> ID IGUAL NUMERO .)


state 85

    (53) conditional_expression -> ID IGUAL ZERO .

    INICIO          reduce using rule 53 (conditional_expression -> ID IGUAL ZERO .)
    PONTO           reduce using rule 53 (conditional_expression -> ID IGUAL ZERO .)


state 86

    (42) conditional_expression -> ID DIFERENTE ID .

    INICIO          reduce using rule 42 (conditional_expression -> ID DIFERENTE ID .)
    PONTO           reduce using rule 42 (conditional_expression -> ID DIFERENTE ID .)


state 87

    (46) conditional_expression -> ID DIFERENTE NUMERO .

    INICIO          reduce using rule 46 (conditional_expression -> ID DIFERENTE NUMERO .)
    PONTO           reduce using rule 46 (conditional_expression -> ID DIFERENTE NUMERO .)


state 88

    (54) conditional_expression -> ID DIFERENTE ZERO .

    INICIO          reduce using rule 54 (conditional_expression -> ID DIFERENTE ZERO .)
    PONTO           reduce using rule 54 (conditional_expression -> ID DIFERENTE ZERO .)


state 89

    (47) conditional_expression -> NUMERO MAIOR ID .

    INICIO          reduce using rule 47 (conditional_expression -> NUMERO MAIOR ID .)
    PONTO           reduce using rule 47 (conditional_expression -> NUMERO MAIOR ID .)


state 90

    (59) conditional_expression -> NUMERO MAIOR ZERO .

    INICIO          reduce using rule 59 (conditional_expression -> NUMERO MAIOR ZERO .)
    PONTO           reduce using rule 59 (conditional_expression -> NUMERO MAIOR ZERO .)


state 91

    (48) conditional_expression -> NUMERO MENOR ID .

    INICIO          reduce using rule 48 (conditional_expression -> NUMERO MENOR ID .)
    PONTO           reduce using rule 48 (conditional_expression -> NUMERO MENOR ID .)


state 92

    (60) conditional_expression -> NUMERO MENOR ZERO .

    INICIO          reduce using rule 60 (conditional_expression -> NUMERO MENOR ZERO .)
    PONTO           reduce using rule 60 (conditional_expression -> NUMERO MENOR ZERO .)


state 93

    (49) conditional_expression -> NUMERO IGUAL ID .

    INICIO          reduce using rule 49 (conditional_expression -> NUMERO IGUAL ID .)
    PONTO           reduce using rule 49 (conditional_expression -> NUMERO IGUAL ID .)


state 94

    (61) conditional_expression -> NUMERO IGUAL ZERO .

    INICIO          reduce using rule 61 (conditional_expression -> NUMERO IGUAL ZERO .)
    PONTO           reduce using rule 61 (conditional_expression -> NUMERO IGUAL ZERO .)


state 95

    (50) conditional_expression -> NUMERO DIFERENTE ID .

    INICIO          reduce using rule 50 (conditional_expression -> NUMERO DIFERENTE ID .)
    PONTO           reduce using rule 50 (conditional_expression -> NUMERO DIFERENTE ID .)


state 96

    (62) conditional_expression -> NUMERO DIFERENTE ZERO .

    INICIO          reduce using rule 62 (conditional_expression -> NUMERO DIFERENTE ZERO .)
    PONTO           reduce using rule 62 (conditional_expression -> NUMERO DIFERENTE ZERO .)


state 97

    (67) conditional_expression -> ZERO MAIOR ZERO .

    INICIO          reduce using rule 67 (conditional_expression -> ZERO MAIOR ZERO .)
    PONTO           reduce using rule 67 (conditional_expression -> ZERO MAIOR ZERO .)


state 98

    (55) conditional_expression -> ZERO MAIOR ID .

    INICIO          reduce using rule 55 (conditional_expression -> ZERO MAIOR ID .)
    PONTO           reduce using rule 55 (conditional_expression -> ZERO MAIOR ID .)


state 99

    (63) conditional_expression -> ZERO MAIOR NUMERO .

    INICIO          reduce using rule 63 (conditional_expression -> ZERO MAIOR NUMERO .)
    PONTO           reduce using rule 63 (conditional_expression -> ZERO MAIOR NUMERO .)


state 100

    (56) conditional_expression -> ZERO MENOR ID .

    INICIO          reduce using rule 56 (conditional_expression -> ZERO MENOR ID .)
    PONTO           reduce using rule 56 (conditional_expression -> ZERO MENOR ID .)


state 101

    (64) conditional_expression -> ZERO MENOR NUMERO .

    INICIO          reduce using rule 64 (conditional_expression -> ZERO MENOR NUMERO .)
    PONTO           reduce using rule 64 (conditional_expression -> ZERO MENOR NUMERO .)


state 102

    (57) conditional_expression -> ZERO IGUAL ID .

    INICIO          reduce using rule 57 (conditional_expression -> ZERO IGUAL ID .)
    PONTO           reduce using rule 57 (conditional_expression -> ZERO IGUAL ID .)


state 103

    (65) conditional_expression -> ZERO IGUAL NUMERO .

    INICIO          reduce using rule 65 (conditional_expression -> ZERO IGUAL NUMERO .)
    PONTO           reduce using rule 65 (conditional_expression -> ZERO IGUAL NUMERO .)


state 104

    (58) conditional_expression -> ZERO DIFERENTE ID .

    INICIO          reduce using rule 58 (conditional_expression -> ZERO DIFERENTE ID .)
    PONTO           reduce using rule 58 (conditional_expression -> ZERO DIFERENTE ID .)


state 105

    (66) conditional_expression -> ZERO DIFERENTE NUMERO .

    INICIO          reduce using rule 66 (conditional_expression -> ZERO DIFERENTE NUMERO .)
    PONTO           reduce using rule 66 (conditional_expression -> ZERO DIFERENTE NUMERO .)


state 106

    (69) if_statement -> SE conditional_expression PONTO ENTAO . PONTO block SENAO block
    (70) if_statement -> SE conditional_expression PONTO ENTAO . PONTO block

    PONTO           shift and go to state 121


state 107

    (2) expression_math -> expression_math MAIS expression_math .
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 2 (expression_math -> expression_math MAIS expression_math .)
    RPAREN          reduce using rule 2 (expression_math -> expression_math MAIS expression_math .)
    VIRGULA         reduce using rule 2 (expression_math -> expression_math MAIS expression_math .)
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67

  ! MAIS            [ reduce using rule 2 (expression_math -> expression_math MAIS expression_math .) ]
  ! MENOS           [ reduce using rule 2 (expression_math -> expression_math MAIS expression_math .) ]
  ! VEZES           [ reduce using rule 2 (expression_math -> expression_math MAIS expression_math .) ]
  ! DIVIDIDO        [ reduce using rule 2 (expression_math -> expression_math MAIS expression_math .) ]


state 108

    (3) expression_math -> expression_math MENOS expression_math .
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 3 (expression_math -> expression_math MENOS expression_math .)
    RPAREN          reduce using rule 3 (expression_math -> expression_math MENOS expression_math .)
    VIRGULA         reduce using rule 3 (expression_math -> expression_math MENOS expression_math .)
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67

  ! MAIS            [ reduce using rule 3 (expression_math -> expression_math MENOS expression_math .) ]
  ! MENOS           [ reduce using rule 3 (expression_math -> expression_math MENOS expression_math .) ]
  ! VEZES           [ reduce using rule 3 (expression_math -> expression_math MENOS expression_math .) ]
  ! DIVIDIDO        [ reduce using rule 3 (expression_math -> expression_math MENOS expression_math .) ]


state 109

    (4) expression_math -> expression_math VEZES expression_math .
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 4 (expression_math -> expression_math VEZES expression_math .)
    RPAREN          reduce using rule 4 (expression_math -> expression_math VEZES expression_math .)
    VIRGULA         reduce using rule 4 (expression_math -> expression_math VEZES expression_math .)
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67

  ! MAIS            [ reduce using rule 4 (expression_math -> expression_math VEZES expression_math .) ]
  ! MENOS           [ reduce using rule 4 (expression_math -> expression_math VEZES expression_math .) ]
  ! VEZES           [ reduce using rule 4 (expression_math -> expression_math VEZES expression_math .) ]
  ! DIVIDIDO        [ reduce using rule 4 (expression_math -> expression_math VEZES expression_math .) ]


state 110

    (5) expression_math -> expression_math DIVIDIDO expression_math .
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .)
    RPAREN          reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .)
    VIRGULA         reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .)
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67

  ! MAIS            [ reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .) ]
  ! MENOS           [ reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .) ]
  ! VEZES           [ reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .) ]
  ! DIVIDIDO        [ reduce using rule 5 (expression_math -> expression_math DIVIDIDO expression_math .) ]


state 111

    (13) function_call -> FUNCAO LPAREN argument_list . RPAREN
    (15) argument_list -> argument_list . VIRGULA expression_math

    RPAREN          shift and go to state 122
    VIRGULA         shift and go to state 123


state 112

    (14) argument_list -> expression_math .
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

    RPAREN          reduce using rule 14 (argument_list -> expression_math .)
    VIRGULA         reduce using rule 14 (argument_list -> expression_math .)
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67


state 113

    (16) argument_list -> empty .

    RPAREN          reduce using rule 16 (argument_list -> empty .)
    VIRGULA         reduce using rule 16 (argument_list -> empty .)


state 114

    (31) elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .

    FIM             reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)
    ID              reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)
    INTEIRO         reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)
    ENQUANTO        reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)
    SE              reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)
    COMP            reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)
    ELGIO           reduce using rule 31 (elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO .)


state 115

    (32) elgio_expression -> elgio_expression MAIS . elgio_expression
    (32) elgio_expression -> . elgio_expression MAIS elgio_expression
    (33) elgio_expression -> . elgio_expression MENOS elgio_expression
    (34) elgio_expression -> . elgio_expression VEZES elgio_expression
    (35) elgio_expression -> . elgio_expression DIVIDIDO elgio_expression
    (36) elgio_expression -> . ID
    (37) elgio_expression -> . NUMERO
    (38) elgio_expression -> . ZERO

    ID              shift and go to state 70
    NUMERO          shift and go to state 71
    ZERO            shift and go to state 72

    elgio_expression               shift and go to state 124

state 116

    (33) elgio_expression -> elgio_expression MENOS . elgio_expression
    (32) elgio_expression -> . elgio_expression MAIS elgio_expression
    (33) elgio_expression -> . elgio_expression MENOS elgio_expression
    (34) elgio_expression -> . elgio_expression VEZES elgio_expression
    (35) elgio_expression -> . elgio_expression DIVIDIDO elgio_expression
    (36) elgio_expression -> . ID
    (37) elgio_expression -> . NUMERO
    (38) elgio_expression -> . ZERO

    ID              shift and go to state 70
    NUMERO          shift and go to state 71
    ZERO            shift and go to state 72

    elgio_expression               shift and go to state 125

state 117

    (34) elgio_expression -> elgio_expression VEZES . elgio_expression
    (32) elgio_expression -> . elgio_expression MAIS elgio_expression
    (33) elgio_expression -> . elgio_expression MENOS elgio_expression
    (34) elgio_expression -> . elgio_expression VEZES elgio_expression
    (35) elgio_expression -> . elgio_expression DIVIDIDO elgio_expression
    (36) elgio_expression -> . ID
    (37) elgio_expression -> . NUMERO
    (38) elgio_expression -> . ZERO

    ID              shift and go to state 70
    NUMERO          shift and go to state 71
    ZERO            shift and go to state 72

    elgio_expression               shift and go to state 126

state 118

    (35) elgio_expression -> elgio_expression DIVIDIDO . elgio_expression
    (32) elgio_expression -> . elgio_expression MAIS elgio_expression
    (33) elgio_expression -> . elgio_expression MENOS elgio_expression
    (34) elgio_expression -> . elgio_expression VEZES elgio_expression
    (35) elgio_expression -> . elgio_expression DIVIDIDO elgio_expression
    (36) elgio_expression -> . ID
    (37) elgio_expression -> . NUMERO
    (38) elgio_expression -> . ZERO

    ID              shift and go to state 70
    NUMERO          shift and go to state 71
    ZERO            shift and go to state 72

    elgio_expression               shift and go to state 127

state 119

    (10) function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO . block
    (74) block -> . INICIO PONTO statement_list FIM PONTO

    INICIO          shift and go to state 4

    block                          shift and go to state 128

state 120

    (19) parameter_list -> parameter_list VIRGULA INTEIRO . ID

    ID              shift and go to state 129


state 121

    (69) if_statement -> SE conditional_expression PONTO ENTAO PONTO . block SENAO block
    (70) if_statement -> SE conditional_expression PONTO ENTAO PONTO . block
    (74) block -> . INICIO PONTO statement_list FIM PONTO

    INICIO          shift and go to state 4

    block                          shift and go to state 130

state 122

    (13) function_call -> FUNCAO LPAREN argument_list RPAREN .

    PONTO           reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)
    MAIS            reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)
    MENOS           reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)
    VEZES           reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)
    DIVIDIDO        reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)
    VIRGULA         reduce using rule 13 (function_call -> FUNCAO LPAREN argument_list RPAREN .)


state 123

    (15) argument_list -> argument_list VIRGULA . expression_math
    (2) expression_math -> . expression_math MAIS expression_math
    (3) expression_math -> . expression_math MENOS expression_math
    (4) expression_math -> . expression_math VEZES expression_math
    (5) expression_math -> . expression_math DIVIDIDO expression_math
    (6) expression_math -> . ID
    (7) expression_math -> . NUMERO
    (8) expression_math -> . function_call
    (9) expression_math -> . ZERO
    (13) function_call -> . FUNCAO LPAREN argument_list RPAREN

    ID              shift and go to state 37
    NUMERO          shift and go to state 38
    ZERO            shift and go to state 40
    FUNCAO          shift and go to state 41

    expression_math                shift and go to state 131
    function_call                  shift and go to state 39

state 124

    (32) elgio_expression -> elgio_expression MAIS elgio_expression .
    (32) elgio_expression -> elgio_expression . MAIS elgio_expression
    (33) elgio_expression -> elgio_expression . MENOS elgio_expression
    (34) elgio_expression -> elgio_expression . VEZES elgio_expression
    (35) elgio_expression -> elgio_expression . DIVIDIDO elgio_expression

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 32 (elgio_expression -> elgio_expression MAIS elgio_expression .)
    MAIS            shift and go to state 115
    MENOS           shift and go to state 116
    VEZES           shift and go to state 117
    DIVIDIDO        shift and go to state 118

  ! MAIS            [ reduce using rule 32 (elgio_expression -> elgio_expression MAIS elgio_expression .) ]
  ! MENOS           [ reduce using rule 32 (elgio_expression -> elgio_expression MAIS elgio_expression .) ]
  ! VEZES           [ reduce using rule 32 (elgio_expression -> elgio_expression MAIS elgio_expression .) ]
  ! DIVIDIDO        [ reduce using rule 32 (elgio_expression -> elgio_expression MAIS elgio_expression .) ]


state 125

    (33) elgio_expression -> elgio_expression MENOS elgio_expression .
    (32) elgio_expression -> elgio_expression . MAIS elgio_expression
    (33) elgio_expression -> elgio_expression . MENOS elgio_expression
    (34) elgio_expression -> elgio_expression . VEZES elgio_expression
    (35) elgio_expression -> elgio_expression . DIVIDIDO elgio_expression

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 33 (elgio_expression -> elgio_expression MENOS elgio_expression .)
    MAIS            shift and go to state 115
    MENOS           shift and go to state 116
    VEZES           shift and go to state 117
    DIVIDIDO        shift and go to state 118

  ! MAIS            [ reduce using rule 33 (elgio_expression -> elgio_expression MENOS elgio_expression .) ]
  ! MENOS           [ reduce using rule 33 (elgio_expression -> elgio_expression MENOS elgio_expression .) ]
  ! VEZES           [ reduce using rule 33 (elgio_expression -> elgio_expression MENOS elgio_expression .) ]
  ! DIVIDIDO        [ reduce using rule 33 (elgio_expression -> elgio_expression MENOS elgio_expression .) ]


state 126

    (34) elgio_expression -> elgio_expression VEZES elgio_expression .
    (32) elgio_expression -> elgio_expression . MAIS elgio_expression
    (33) elgio_expression -> elgio_expression . MENOS elgio_expression
    (34) elgio_expression -> elgio_expression . VEZES elgio_expression
    (35) elgio_expression -> elgio_expression . DIVIDIDO elgio_expression

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 34 (elgio_expression -> elgio_expression VEZES elgio_expression .)
    MAIS            shift and go to state 115
    MENOS           shift and go to state 116
    VEZES           shift and go to state 117
    DIVIDIDO        shift and go to state 118

  ! MAIS            [ reduce using rule 34 (elgio_expression -> elgio_expression VEZES elgio_expression .) ]
  ! MENOS           [ reduce using rule 34 (elgio_expression -> elgio_expression VEZES elgio_expression .) ]
  ! VEZES           [ reduce using rule 34 (elgio_expression -> elgio_expression VEZES elgio_expression .) ]
  ! DIVIDIDO        [ reduce using rule 34 (elgio_expression -> elgio_expression VEZES elgio_expression .) ]


state 127

    (35) elgio_expression -> elgio_expression DIVIDIDO elgio_expression .
    (32) elgio_expression -> elgio_expression . MAIS elgio_expression
    (33) elgio_expression -> elgio_expression . MENOS elgio_expression
    (34) elgio_expression -> elgio_expression . VEZES elgio_expression
    (35) elgio_expression -> elgio_expression . DIVIDIDO elgio_expression

  ! shift/reduce conflict for MAIS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for VEZES resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
    PONTO           reduce using rule 35 (elgio_expression -> elgio_expression DIVIDIDO elgio_expression .)
    MAIS            shift and go to state 115
    MENOS           shift and go to state 116
    VEZES           shift and go to state 117
    DIVIDIDO        shift and go to state 118

  ! MAIS            [ reduce using rule 35 (elgio_expression -> elgio_expression DIVIDIDO elgio_expression .) ]
  ! MENOS           [ reduce using rule 35 (elgio_expression -> elgio_expression DIVIDIDO elgio_expression .) ]
  ! VEZES           [ reduce using rule 35 (elgio_expression -> elgio_expression DIVIDIDO elgio_expression .) ]
  ! DIVIDIDO        [ reduce using rule 35 (elgio_expression -> elgio_expression DIVIDIDO elgio_expression .) ]


state 128

    (10) function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block .

    INICIO          reduce using rule 10 (function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block .)
    INTEIRO         reduce using rule 10 (function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block .)


state 129

    (19) parameter_list -> parameter_list VIRGULA INTEIRO ID .

    RPAREN          reduce using rule 19 (parameter_list -> parameter_list VIRGULA INTEIRO ID .)
    VIRGULA         reduce using rule 19 (parameter_list -> parameter_list VIRGULA INTEIRO ID .)


state 130

    (69) if_statement -> SE conditional_expression PONTO ENTAO PONTO block . SENAO block
    (70) if_statement -> SE conditional_expression PONTO ENTAO PONTO block .

    SENAO           shift and go to state 132
    FIM             reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)
    ID              reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)
    INTEIRO         reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)
    ENQUANTO        reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)
    SE              reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)
    COMP            reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)
    ELGIO           reduce using rule 70 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block .)


state 131

    (15) argument_list -> argument_list VIRGULA expression_math .
    (2) expression_math -> expression_math . MAIS expression_math
    (3) expression_math -> expression_math . MENOS expression_math
    (4) expression_math -> expression_math . VEZES expression_math
    (5) expression_math -> expression_math . DIVIDIDO expression_math

    RPAREN          reduce using rule 15 (argument_list -> argument_list VIRGULA expression_math .)
    VIRGULA         reduce using rule 15 (argument_list -> argument_list VIRGULA expression_math .)
    MAIS            shift and go to state 64
    MENOS           shift and go to state 65
    VEZES           shift and go to state 66
    DIVIDIDO        shift and go to state 67


state 132

    (69) if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO . block
    (74) block -> . INICIO PONTO statement_list FIM PONTO

    INICIO          shift and go to state 4

    block                          shift and go to state 133

state 133

    (69) if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .

    FIM             reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)
    ID              reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)
    INTEIRO         reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)
    ENQUANTO        reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)
    SE              reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)
    COMP            reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)
    ELGIO           reduce using rule 69 (if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for INTEIRO in state 9 resolved as shift
WARNING: shift/reduce conflict for ENQUANTO in state 9 resolved as shift
WARNING: shift/reduce conflict for SE in state 9 resolved as shift
WARNING: shift/reduce conflict for COMP in state 9 resolved as shift
WARNING: shift/reduce conflict for ELGIO in state 9 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 107 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 107 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 108 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 109 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 109 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 110 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 110 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 124 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 124 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 125 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 125 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 126 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 126 resolved as shift
WARNING: shift/reduce conflict for MAIS in state 127 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 127 resolved as shift
WARNING: shift/reduce conflict for VEZES in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 127 resolved as shift
