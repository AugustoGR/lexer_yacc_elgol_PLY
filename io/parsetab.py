
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programCOMP DIFERENTE DIVIDIDO ELGIO ENQUANTO ENTAO FIM FUNCAO ID IGUAL IGUALATRIBUTO INICIO INTEIRO LPAREN MAIOR MAIS MENOR MENOS NUMERO PONTO RPAREN SE SENAO VEZES VIRGULA ZEROexpression : ID IGUALATRIBUTO expression_math PONTOexpression_math : expression_math MAIS expression_math\n                       | expression_math MENOS expression_math\n                       | expression_math VEZES expression_math\n                       | expression_math DIVIDIDO expression_mathexpression_math : ID\n                       | NUMERO\n                       | function_call\n                       | ZEROfunction_definition : INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO blockfunction_definitions : function_definition\n                            | function_definitions function_definitionfunction_call : FUNCAO LPAREN argument_list RPAREN argument_list : expression_math\n                     | argument_list VIRGULA expression_math\n                     | emptyempty :parameter_list : INTEIRO ID\n                      | parameter_list VIRGULA INTEIRO ID\n                      | emptystatement_list : statement\n                      | statement_list statement\n                      | emptystatement : expression\n                 | variable_declaration\n                 | loop\n                 | if_statement\n                 | comp\n                 | elgio_assignmentvariable_declaration : INTEIRO ID PONTOelgio_assignment : ELGIO IGUALATRIBUTO elgio_expression PONTOelgio_expression : elgio_expression MAIS elgio_expression\n                        | elgio_expression MENOS elgio_expression\n                        | elgio_expression VEZES elgio_expression\n                        | elgio_expression DIVIDIDO elgio_expression\n                        | ID\n                        | NUMERO\n                        | ZEROconditional_expression : ID MAIOR ID\n                                | ID MENOR ID\n                                | ID IGUAL ID\n                                | ID DIFERENTE ID\n                                | ID MAIOR NUMERO\n                                | ID MENOR NUMERO\n                                | ID IGUAL NUMERO\n                                | ID DIFERENTE NUMERO\n                                | NUMERO MAIOR ID\n                                | NUMERO MENOR ID\n                                | NUMERO IGUAL ID\n                                | NUMERO DIFERENTE ID\n                                | ID MAIOR ZERO\n                                | ID MENOR ZERO\n                                | ID IGUAL ZERO\n                                | ID DIFERENTE ZERO\n                                | ZERO MAIOR ID\n                                | ZERO MENOR ID\n                                | ZERO IGUAL ID\n                                | ZERO DIFERENTE ID\n                                | NUMERO MAIOR ZERO\n                                | NUMERO MENOR ZERO\n                                | NUMERO IGUAL ZERO\n                                | NUMERO DIFERENTE ZERO\n                                | ZERO MAIOR NUMERO\n                                | ZERO MENOR NUMERO\n                                | ZERO IGUAL NUMERO\n                                | ZERO DIFERENTE NUMERO\n                                | ZERO MAIOR ZEROloop : ENQUANTO conditional_expression blockif_statement : SE conditional_expression PONTO ENTAO PONTO block SENAO block\n                    | SE conditional_expression PONTO ENTAO PONTO blockcomp : COMP  expression_math PONTOprogram : block\n               | function_definitions blockblock : INICIO PONTO statement_list FIM PONTO'
    
_lr_action_items = {'INICIO':([0,3,5,8,31,46,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,119,121,128,132,],[4,4,-11,-12,4,-74,-39,-43,-51,-40,-44,-52,-41,-45,-53,-42,-46,-54,-47,-59,-48,-60,-49,-61,-50,-62,-67,-55,-63,-56,-64,-57,-65,-58,-66,4,4,-10,4,]),'INTEIRO':([0,3,5,8,9,11,12,13,14,15,16,17,18,19,26,28,46,48,49,63,75,76,114,128,130,133,],[6,6,-11,-12,21,21,-21,-23,-24,-25,-26,-27,-28,-29,43,-22,-74,-30,-68,-71,120,-1,-31,-10,-70,-69,]),'$end':([1,2,7,46,],[0,-72,-73,-74,]),'PONTO':([4,27,30,35,36,37,38,39,40,47,69,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,122,124,125,126,127,],[9,46,48,62,63,-6,-7,-8,-9,76,114,-36,-37,-38,119,-39,-43,-51,-40,-44,-52,-41,-45,-53,-42,-46,-54,-47,-59,-48,-60,-49,-61,-50,-62,-67,-55,-63,-56,-64,-57,-65,-58,-66,121,-2,-3,-4,-5,-13,-32,-33,-34,-35,]),'FUNCAO':([6,24,29,64,65,66,67,68,123,],[10,41,41,41,41,41,41,41,41,]),'FIM':([9,11,12,13,14,15,16,17,18,19,28,46,48,49,63,76,114,130,133,],[-17,27,-21,-23,-24,-25,-26,-27,-28,-29,-22,-74,-30,-68,-71,-1,-31,-70,-69,]),'ID':([9,11,12,13,14,15,16,17,18,19,21,22,23,24,28,29,42,43,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,76,114,115,116,117,118,120,123,130,133,],[20,20,-21,-23,-24,-25,-26,-27,-28,-29,30,32,32,37,-22,37,70,73,-74,-30,-68,77,80,83,86,89,91,93,95,98,100,102,104,-71,37,37,37,37,37,-1,-31,70,70,70,70,129,37,-70,-69,]),'ENQUANTO':([9,11,12,13,14,15,16,17,18,19,28,46,48,49,63,76,114,130,133,],[22,22,-21,-23,-24,-25,-26,-27,-28,-29,-22,-74,-30,-68,-71,-1,-31,-70,-69,]),'SE':([9,11,12,13,14,15,16,17,18,19,28,46,48,49,63,76,114,130,133,],[23,23,-21,-23,-24,-25,-26,-27,-28,-29,-22,-74,-30,-68,-71,-1,-31,-70,-69,]),'COMP':([9,11,12,13,14,15,16,17,18,19,28,46,48,49,63,76,114,130,133,],[24,24,-21,-23,-24,-25,-26,-27,-28,-29,-22,-74,-30,-68,-71,-1,-31,-70,-69,]),'ELGIO':([9,11,12,13,14,15,16,17,18,19,28,46,48,49,63,76,114,130,133,],[25,25,-21,-23,-24,-25,-26,-27,-28,-29,-22,-74,-30,-68,-71,-1,-31,-70,-69,]),'LPAREN':([10,41,],[26,68,]),'IGUALATRIBUTO':([20,25,],[29,42,]),'NUMERO':([22,23,24,29,42,50,51,52,53,58,59,60,61,64,65,66,67,68,115,116,117,118,123,],[33,33,38,38,71,78,81,84,87,99,101,103,105,38,38,38,38,38,71,71,71,71,38,]),'ZERO':([22,23,24,29,42,50,51,52,53,54,55,56,57,58,64,65,66,67,68,115,116,117,118,123,],[34,34,40,40,72,79,82,85,88,90,92,94,96,97,40,40,40,40,40,72,72,72,72,40,]),'RPAREN':([26,37,38,39,40,44,45,68,73,107,108,109,110,111,112,113,122,129,131,],[-17,-6,-7,-8,-9,74,-20,-17,-18,-2,-3,-4,-5,122,-14,-16,-13,-19,-15,]),'VIRGULA':([26,37,38,39,40,44,45,68,73,107,108,109,110,111,112,113,122,129,131,],[-17,-6,-7,-8,-9,75,-20,-17,-18,-2,-3,-4,-5,123,-14,-16,-13,-19,-15,]),'MAIOR':([32,33,34,],[50,54,58,]),'MENOR':([32,33,34,],[51,55,59,]),'IGUAL':([32,33,34,],[52,56,60,]),'DIFERENTE':([32,33,34,],[53,57,61,]),'MAIS':([36,37,38,39,40,47,69,70,71,72,107,108,109,110,112,122,124,125,126,127,131,],[64,-6,-7,-8,-9,64,115,-36,-37,-38,64,64,64,64,64,-13,115,115,115,115,64,]),'MENOS':([36,37,38,39,40,47,69,70,71,72,107,108,109,110,112,122,124,125,126,127,131,],[65,-6,-7,-8,-9,65,116,-36,-37,-38,65,65,65,65,65,-13,116,116,116,116,65,]),'VEZES':([36,37,38,39,40,47,69,70,71,72,107,108,109,110,112,122,124,125,126,127,131,],[66,-6,-7,-8,-9,66,117,-36,-37,-38,66,66,66,66,66,-13,117,117,117,117,66,]),'DIVIDIDO':([36,37,38,39,40,47,69,70,71,72,107,108,109,110,112,122,124,125,126,127,131,],[67,-6,-7,-8,-9,67,118,-36,-37,-38,67,67,67,67,67,-13,118,118,118,118,67,]),'SENAO':([46,130,],[-74,132,]),'ENTAO':([62,],[106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,3,31,119,121,132,],[2,7,49,128,130,133,]),'function_definitions':([0,],[3,]),'function_definition':([0,3,],[5,8,]),'statement_list':([9,],[11,]),'statement':([9,11,],[12,28,]),'empty':([9,26,68,],[13,45,113,]),'expression':([9,11,],[14,14,]),'variable_declaration':([9,11,],[15,15,]),'loop':([9,11,],[16,16,]),'if_statement':([9,11,],[17,17,]),'comp':([9,11,],[18,18,]),'elgio_assignment':([9,11,],[19,19,]),'conditional_expression':([22,23,],[31,35,]),'expression_math':([24,29,64,65,66,67,68,123,],[36,47,107,108,109,110,112,131,]),'function_call':([24,29,64,65,66,67,68,123,],[39,39,39,39,39,39,39,39,]),'parameter_list':([26,],[44,]),'elgio_expression':([42,115,116,117,118,],[69,124,125,126,127,]),'argument_list':([68,],[111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expression -> ID IGUALATRIBUTO expression_math PONTO','expression',4,'p_expression_assignment','yacc.py',6),
  ('expression_math -> expression_math MAIS expression_math','expression_math',3,'p_expression_math_binop','yacc.py',10),
  ('expression_math -> expression_math MENOS expression_math','expression_math',3,'p_expression_math_binop','yacc.py',11),
  ('expression_math -> expression_math VEZES expression_math','expression_math',3,'p_expression_math_binop','yacc.py',12),
  ('expression_math -> expression_math DIVIDIDO expression_math','expression_math',3,'p_expression_math_binop','yacc.py',13),
  ('expression_math -> ID','expression_math',1,'p_expression_math_operand','yacc.py',17),
  ('expression_math -> NUMERO','expression_math',1,'p_expression_math_operand','yacc.py',18),
  ('expression_math -> function_call','expression_math',1,'p_expression_math_operand','yacc.py',19),
  ('expression_math -> ZERO','expression_math',1,'p_expression_math_operand','yacc.py',20),
  ('function_definition -> INTEIRO FUNCAO LPAREN parameter_list RPAREN PONTO block','function_definition',7,'p_function_definition','yacc.py',26),
  ('function_definitions -> function_definition','function_definitions',1,'p_function_definitions','yacc.py',30),
  ('function_definitions -> function_definitions function_definition','function_definitions',2,'p_function_definitions','yacc.py',31),
  ('function_call -> FUNCAO LPAREN argument_list RPAREN','function_call',4,'p_function_call','yacc.py',39),
  ('argument_list -> expression_math','argument_list',1,'p_argument_list','yacc.py',43),
  ('argument_list -> argument_list VIRGULA expression_math','argument_list',3,'p_argument_list','yacc.py',44),
  ('argument_list -> empty','argument_list',1,'p_argument_list','yacc.py',45),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',56),
  ('parameter_list -> INTEIRO ID','parameter_list',2,'p_parameter_list','yacc.py',60),
  ('parameter_list -> parameter_list VIRGULA INTEIRO ID','parameter_list',4,'p_parameter_list','yacc.py',61),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','yacc.py',62),
  ('statement_list -> statement','statement_list',1,'p_statement_list','yacc.py',75),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','yacc.py',76),
  ('statement_list -> empty','statement_list',1,'p_statement_list','yacc.py',77),
  ('statement -> expression','statement',1,'p_statement','yacc.py',88),
  ('statement -> variable_declaration','statement',1,'p_statement','yacc.py',89),
  ('statement -> loop','statement',1,'p_statement','yacc.py',90),
  ('statement -> if_statement','statement',1,'p_statement','yacc.py',91),
  ('statement -> comp','statement',1,'p_statement','yacc.py',92),
  ('statement -> elgio_assignment','statement',1,'p_statement','yacc.py',93),
  ('variable_declaration -> INTEIRO ID PONTO','variable_declaration',3,'p_variable_declaration','yacc.py',97),
  ('elgio_assignment -> ELGIO IGUALATRIBUTO elgio_expression PONTO','elgio_assignment',4,'p_elgio_assignment','yacc.py',101),
  ('elgio_expression -> elgio_expression MAIS elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',105),
  ('elgio_expression -> elgio_expression MENOS elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',106),
  ('elgio_expression -> elgio_expression VEZES elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',107),
  ('elgio_expression -> elgio_expression DIVIDIDO elgio_expression','elgio_expression',3,'p_elgio_expression','yacc.py',108),
  ('elgio_expression -> ID','elgio_expression',1,'p_elgio_expression','yacc.py',109),
  ('elgio_expression -> NUMERO','elgio_expression',1,'p_elgio_expression','yacc.py',110),
  ('elgio_expression -> ZERO','elgio_expression',1,'p_elgio_expression','yacc.py',111),
  ('conditional_expression -> ID MAIOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',120),
  ('conditional_expression -> ID MENOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',121),
  ('conditional_expression -> ID IGUAL ID','conditional_expression',3,'p_conditional_expression','yacc.py',122),
  ('conditional_expression -> ID DIFERENTE ID','conditional_expression',3,'p_conditional_expression','yacc.py',123),
  ('conditional_expression -> ID MAIOR NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',124),
  ('conditional_expression -> ID MENOR NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',125),
  ('conditional_expression -> ID IGUAL NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',126),
  ('conditional_expression -> ID DIFERENTE NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',127),
  ('conditional_expression -> NUMERO MAIOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',128),
  ('conditional_expression -> NUMERO MENOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',129),
  ('conditional_expression -> NUMERO IGUAL ID','conditional_expression',3,'p_conditional_expression','yacc.py',130),
  ('conditional_expression -> NUMERO DIFERENTE ID','conditional_expression',3,'p_conditional_expression','yacc.py',131),
  ('conditional_expression -> ID MAIOR ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',132),
  ('conditional_expression -> ID MENOR ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',133),
  ('conditional_expression -> ID IGUAL ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',134),
  ('conditional_expression -> ID DIFERENTE ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',135),
  ('conditional_expression -> ZERO MAIOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',136),
  ('conditional_expression -> ZERO MENOR ID','conditional_expression',3,'p_conditional_expression','yacc.py',137),
  ('conditional_expression -> ZERO IGUAL ID','conditional_expression',3,'p_conditional_expression','yacc.py',138),
  ('conditional_expression -> ZERO DIFERENTE ID','conditional_expression',3,'p_conditional_expression','yacc.py',139),
  ('conditional_expression -> NUMERO MAIOR ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',140),
  ('conditional_expression -> NUMERO MENOR ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',141),
  ('conditional_expression -> NUMERO IGUAL ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',142),
  ('conditional_expression -> NUMERO DIFERENTE ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',143),
  ('conditional_expression -> ZERO MAIOR NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',144),
  ('conditional_expression -> ZERO MENOR NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',145),
  ('conditional_expression -> ZERO IGUAL NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',146),
  ('conditional_expression -> ZERO DIFERENTE NUMERO','conditional_expression',3,'p_conditional_expression','yacc.py',147),
  ('conditional_expression -> ZERO MAIOR ZERO','conditional_expression',3,'p_conditional_expression','yacc.py',148),
  ('loop -> ENQUANTO conditional_expression block','loop',3,'p_loop','yacc.py',152),
  ('if_statement -> SE conditional_expression PONTO ENTAO PONTO block SENAO block','if_statement',8,'p_if_statement','yacc.py',156),
  ('if_statement -> SE conditional_expression PONTO ENTAO PONTO block','if_statement',6,'p_if_statement','yacc.py',157),
  ('comp -> COMP expression_math PONTO','comp',3,'p_comp','yacc.py',164),
  ('program -> block','program',1,'p_program','yacc.py',168),
  ('program -> function_definitions block','program',2,'p_program','yacc.py',169),
  ('block -> INICIO PONTO statement_list FIM PONTO','block',5,'p_block','yacc.py',176),
]
